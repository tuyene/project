// <auto-generated />
using System;
using CoffeeHouse.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeHouse.Migrations
{
    [DbContext(typeof(CoffeeHouseContext))]
    [Migration("20231023071725_tables")]
    partial class tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoffeeHouse.Models.Category", b =>
                {
                    b.Property<string>("IdCategory")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            IdCategory = "C01",
                            Name = "Capuchino"
                        },
                        new
                        {
                            IdCategory = "C02",
                            Name = "Cafe"
                        },
                        new
                        {
                            IdCategory = "C03",
                            Name = "Latte"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Customer", b =>
                {
                    b.Property<string>("IdCustomer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCustomer");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            IdCustomer = "Cs01",
                            Address = "Ha Noi",
                            Birthday = new DateTime(2003, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tuyen@gmail.com",
                            FullName = "Nguyen Van Tuyen",
                            Phone = "0111444666"
                        },
                        new
                        {
                            IdCustomer = "Cs02",
                            Address = "Thai Binh",
                            Birthday = new DateTime(2003, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quang@gmail.com",
                            FullName = "Pham Huu Quang",
                            Phone = "0111444777"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.OrderInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("IdOrders")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<float>("Reduce")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdOrders");

                    b.HasIndex("IdProduct");

                    b.ToTable("OrdersInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdOrders = "Or01",
                            IdProduct = "P01",
                            Number = 2,
                            Reduce = 0f
                        },
                        new
                        {
                            Id = 2,
                            IdOrders = "Or02",
                            IdProduct = "P02",
                            Number = 1,
                            Reduce = 0f
                        },
                        new
                        {
                            Id = 3,
                            IdOrders = "Or03",
                            IdProduct = "P05",
                            Number = 3,
                            Reduce = 0f
                        },
                        new
                        {
                            Id = 4,
                            IdOrders = "Or04",
                            IdProduct = "P04",
                            Number = 1,
                            Reduce = 0f
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Orders", b =>
                {
                    b.Property<string>("IdOrders")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdCustomer")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdStaff")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdOrders");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdStaff");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            IdOrders = "Or01",
                            IdCustomer = "Cs01",
                            IdStaff = "S03",
                            Note = "Đã thanh toán",
                            OrderDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdOrders = "Or02",
                            IdCustomer = "Cs02",
                            IdStaff = "S01",
                            Note = "Chưa thanh toán",
                            OrderDate = new DateTime(2023, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdOrders = "Or03",
                            IdCustomer = "Cs02",
                            IdStaff = "S02",
                            Note = "Đã thanh toán",
                            OrderDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdOrders = "Or04",
                            IdCustomer = "Cs01",
                            IdStaff = "S01",
                            Note = "Đã thanh toán",
                            OrderDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Products", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("IdProduct");

                    b.HasIndex("IdCategory");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            IdProduct = "P01",
                            IdCategory = "C02",
                            Name = "Cafe Latte",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P02",
                            IdCategory = "C01",
                            Name = "Capuchino Vinnese",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P03",
                            IdCategory = "C03",
                            Name = "Latte Machiato",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P04",
                            IdCategory = "C01",
                            Name = "Capuchino",
                            Price = 50.25f
                        },
                        new
                        {
                            IdProduct = "P05",
                            IdCategory = "C02",
                            Name = "Cafe Mocha",
                            Price = 50.25f
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.Staff", b =>
                {
                    b.Property<string>("IdSatff")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSatff");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            IdSatff = "S01",
                            Address = "Thai Binh",
                            Birthday = new DateTime(2003, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duong@gmail.com",
                            FullName = "Nguyen Thuy Duong",
                            Phone = "0111333444",
                            Position = "Manager"
                        },
                        new
                        {
                            IdSatff = "S02",
                            Address = "Ha Noi",
                            Birthday = new DateTime(2003, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hduong@gmail.com",
                            FullName = "Hoang Duong",
                            Phone = "0222444555",
                            Position = "Staff"
                        },
                        new
                        {
                            IdSatff = "S03",
                            Address = "Quang Ninh",
                            Birthday = new DateTime(2003, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phu@gmail.com",
                            FullName = "Nguyen Gia Phu",
                            Phone = "0111322666",
                            Position = "Staff"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.Models.OrderInfo", b =>
                {
                    b.HasOne("CoffeeHouse.Models.Orders", "Orders")
                        .WithMany()
                        .HasForeignKey("IdOrders")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeHouse.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("CoffeeHouse.Models.Orders", b =>
                {
                    b.HasOne("CoffeeHouse.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeHouse.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("IdStaff")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("CoffeeHouse.Models.Products", b =>
                {
                    b.HasOne("CoffeeHouse.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
